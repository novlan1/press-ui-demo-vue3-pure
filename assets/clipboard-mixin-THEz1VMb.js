import{ap as p,aq as m,f as g,ar as h,as as C,at as I,_ as T,g as k,r as S,o as r,c as i,e as b,k as N,a as l,l as c,d as w,t as B,n as _,au as D}from"./index-kFNFdPJ4.js";import{a as O,c as P}from"./clipboard-web-BXk4gSTi.js";const u="#fff";function H(e){return p({"z-index":e.zIndex,top:m(e.top)})}function x(e){return p({background:e.background,color:e.color})}const z={rootStyle:H,notifyStyle:x},d={show:{type:Boolean,default:!1},message:{type:String,default:""},background:{type:String,default:""},type:{type:String,default:"danger"},color:{type:String,default:u},zIndex:{type:Number,default:110},safeAreaInsetTop:{type:Boolean,default:!1},top:{type:[null,String,Number],default:null},...k},v={name:"PressNotify",options:{...g,styleIsolation:"shared"},components:{PressTransition:h},mixins:[C(d)],props:d,emits:[],data(){return{onOpened:null,onClose:null,onClick:null,computed:z}},watch:{},created(){const e=O();this.statusBarHeight=e},methods:{onTap(e){const{onClick:t}=this;t&&t(I(e))}}},A={class:"press-notify-index"};function $(e,t,a,n,s,f){const y=S("PressTransition");return r(),i("div",A,[b(y,{name:"slide-down",show:e.dataShow,"custom-class":"press-notify__container","custom-style":s.computed.rootStyle({zIndex:e.dataZIndex,top:e.dataTop}),onClick:f.onTap},{default:N(()=>[l("div",{class:_("press-notify press-notify--"+e.dataType),style:c(s.computed.notifyStyle({background:e.dataBackground,color:e.dataColor}))},[e.dataSafeAreaInsetTop?(r(),i("div",{key:0,style:c("height: "+e.statusBarHeight+"px")},null,4)):w("",!0),l("span",null,B(e.dataMessage),1)],6)]),_:1},8,["show","custom-style","onClick"])])}const E=T(v,[["render",$],["__scopeId","data-v-ee897809"]]),M={selector:"#press-notify",type:"danger",message:"",background:"",duration:3e3,show:!0,zIndex:110,top:0,color:u,safeAreaInsetTop:!1,onClick:()=>{},onOpened:()=>{},onClose:()=>{},animationDuration:300},V=D({defaultOptions:M,component:E});let o;o=V;const L=o;o.clear;o.setDefaultOptions;o.resetDefaultOptions;function U(e){return new Promise(function(t,a){wx?wx.setClipboardData({data:"".concat(e),success:function(){t()},fail:function(s){console.log(s),a()}}):a()})}function W(e){let t=U;return t=P,t(`${e}`)}const R={data(){let e=0;return e=44,{offsetTop:e}},methods:{copyIconTag(e){const t=this;W(e).then(()=>{L({type:"success",duration:1500,message:`${t.t("copied")}ï¼š${e}`,top:t.offsetTop})})}}};export{R as C};
